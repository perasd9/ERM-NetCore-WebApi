// <auto-generated />
using System;
using DataAccess.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(OpremaContext))]
    [Migration("20240318221944_Dodat datum razduzivanja u tabeli zaduzivanje")]
    partial class Dodatdatumrazduzivanjautabelizaduzivanje
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Kabinet", b =>
                {
                    b.Property<int>("KabinetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KabinetId"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KabinetId");

                    b.ToTable("Kabineti");
                });

            modelBuilder.Entity("Domain.Oprema", b =>
                {
                    b.Property<Guid>("SerijskiBroj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InventarskiBroj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("TipOpremeId")
                        .HasColumnType("int");

                    b.HasKey("SerijskiBroj");

                    b.HasIndex("TipOpremeId");

                    b.ToTable("Oprema");
                });

            modelBuilder.Entity("Domain.TipOpreme", b =>
                {
                    b.Property<int>("TipOpremeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipOpremeId"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipOpremeId");

                    b.ToTable("TipOpreme");
                });

            modelBuilder.Entity("Domain.Zaduzivanje", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("SerijskiBroj")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DatumZaduzivanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("ZaduzivanjeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZaduzivanjeId"));

                    b.Property<int>("BrojKomada")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DatumRazduzivanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("KabinetId")
                        .HasColumnType("int");

                    b.HasKey("Email", "SerijskiBroj", "DatumZaduzivanja", "ZaduzivanjeId");

                    b.HasIndex("KabinetId");

                    b.HasIndex("SerijskiBroj");

                    b.ToTable("Zaduzivanje");
                });

            modelBuilder.Entity("Domain.Zaposleni", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KabinetId")
                        .HasColumnType("int");

                    b.Property<string>("Katedra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.HasIndex("KabinetId");

                    b.ToTable("Zaposleni");
                });

            modelBuilder.Entity("Domain.Oprema", b =>
                {
                    b.HasOne("Domain.TipOpreme", "TipOpreme")
                        .WithMany("ListaOpreme")
                        .HasForeignKey("TipOpremeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipOpreme");
                });

            modelBuilder.Entity("Domain.Zaduzivanje", b =>
                {
                    b.HasOne("Domain.Zaposleni", "Zaposleni")
                        .WithMany("ListaZaduzivanja")
                        .HasForeignKey("Email")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Kabinet", "Kabinet")
                        .WithMany("ListaZaduzivanja")
                        .HasForeignKey("KabinetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Oprema", "Oprema")
                        .WithMany("ListaZaduzivanja")
                        .HasForeignKey("SerijskiBroj")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kabinet");

                    b.Navigation("Oprema");

                    b.Navigation("Zaposleni");
                });

            modelBuilder.Entity("Domain.Zaposleni", b =>
                {
                    b.HasOne("Domain.Kabinet", "Kabinet")
                        .WithMany("ListaZaposlenih")
                        .HasForeignKey("KabinetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kabinet");
                });

            modelBuilder.Entity("Domain.Kabinet", b =>
                {
                    b.Navigation("ListaZaduzivanja");

                    b.Navigation("ListaZaposlenih");
                });

            modelBuilder.Entity("Domain.Oprema", b =>
                {
                    b.Navigation("ListaZaduzivanja");
                });

            modelBuilder.Entity("Domain.TipOpreme", b =>
                {
                    b.Navigation("ListaOpreme");
                });

            modelBuilder.Entity("Domain.Zaposleni", b =>
                {
                    b.Navigation("ListaZaduzivanja");
                });
#pragma warning restore 612, 618
        }
    }
}
